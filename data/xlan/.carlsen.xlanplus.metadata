{"timestamp": 1716135060.631666, "stored_source_code": "# declare a list tasks whose products you want to use as inputs\nupstream = None\n\nupstream = []\ndef pgn_to_xlan(pgn_path, xlan_path):\n    from src.data_preprocessing.pgn_to_xlan import pgn_to_xlan\n\n    min_number_of_moves_per_game = 0\n    number_of_games_to_write = -1  # -1 for all games\n\n    pgn_to_lan = pgn_to_xlan(\n        pgn_path,\n        xlan_path,\n        min_number_of_moves_per_game=min_number_of_moves_per_game,\n        number_of_games_to_write=number_of_games_to_write,\n        generate_all_moves=False,\n        log=False,\n        xLanPlus=True,\n    )\n\n    pgn_to_lan.convert_pgn_parallel()\ndef remove_duplicates(file_path):\n    from collections import OrderedDict\n\n    with open(file_path, \"r\") as f:\n        lines = OrderedDict((line, None) for line in f)\n\n    with open(file_path, \"w\") as f:\n        f.writelines(lines.keys())\npgn_to_xlan(pgn_path, lan_path)\nremove_duplicates(training_file)", "params": {"pgn_path": "./data/pgn/carlsen.pgn", "lan_path": "./data/xlan/carlsen.xlanplus", "training_file": "./data/xlan/carlsen.xlanplus"}}