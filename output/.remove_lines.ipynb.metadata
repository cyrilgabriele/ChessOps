{"timestamp": 1714228374.991213, "stored_source_code": "# declare a list tasks whose products you want to use as inputs\nupstream = None\nupstream = [\"create_tokens\"]\ndef remove_lines_with_too_many_tokens(input_file_path, output_file_path, token_limit=768):\n    with open(input_file_path, \"r\") as file:\n        lines = file.readlines()\n\n    print(f\"Number of lines in {input_file_path}: {len(lines)}\")\n    lines_to_keep = []\n    removed_count = 0\n\n    for line in lines:\n        if len(line.split()) <= token_limit:\n            lines_to_keep.append(line)\n        else:\n            removed_count += 1\n\n    print(f\"Number of lines in {output_file_path}: {len(lines_to_keep)}\")\n    with open(output_file_path, \"w\") as file:\n        file.writelines(lines_to_keep)\n\n    return removed_count\ndef remove(): \n    input_file_path = \"/Users/cyrilgabriele/Documents/School/00_Courses/03_MLOPS/04_Project/ChessOps/data/tokens/carlsen.tok\"\n    output_file_path = \"/Users/cyrilgabriele/Documents/School/00_Courses/03_MLOPS/04_Project/ChessOps/data/tokens/carlsen_max_768.tok\"\n    removed_lines = remove_lines_with_too_many_tokens(input_file_path, output_file_path)\n    print(f\"Number of removed lines: {removed_lines}\")\nremove()", "params": {}}